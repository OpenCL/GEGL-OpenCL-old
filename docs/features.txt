GEGL Feature List
-----------------

  - Floating point handling and processing and output of larger 8bit, 16bit
    integer and 32bit floating point per component buffers larger than RAM.

  - C based, object oriented API with introspection support for dynamic
    languages like python, ruby, javascript and php.

  - Processing
     * Iterative chunk-wise processing.
     * Processes subregions and dependencies.
     * Subgraph caches to aid performance of non-destructive editing.
     * Multi-threaded processing.
     * Experimental OpenCL acceleration, with possibility of hybrid cpu/gpu
       processing.
  - link:api.html#GeglBuffer[GeglBuffer]
     * Storage of all babl supported formats.
     * Sparse swapped buffers (larger than RAM images).
     * linear buffers (allocated internally or from external allocation.)
     * On demand tiled mipmapping.
     * Thread-safe reading/writing.
     * External tile-backends (allow wrapping other tiled buffer systems
       to use them through the GeglBuffer API).
  - Operations
      * PNG, JPEG, SVG, EXR, RAW, ffmpeg, v4l and other image sources.
      * link:operations.html#cat_render[Pattern renderers]
      * link:operations.html#cat_math[Arithmetic operations]
      * link:operations.html#cat_porter-duff[porter duff compositing]
      * SVG filter modes and full set of compositing ops from SVG-1.2 draft.
      * Gaussian blur, bilateral-filter, symmetric nearest neighbour, linear
      * blur, unsharp mask, pixelize and more.
      * link:operations.html#cat_color[Color correction].
      * Text rendering using cairo and http://pango.org/[pango].
      * HDR exposure merging and tone mapping operations.
      * Most operations operate in
        http://en.wikipedia.org/wiki/ScRGB_color_space[scRGB] (using 32bit
        floating point/HDR linear light RGBA)
  - Bounding box based hit detection.
  - XML serialization format (not-finalized)
